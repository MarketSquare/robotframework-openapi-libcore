openapi: 3.0.0
info:
  title: Media API
  description: Hypermedia API used to demonstrate composite schema definition using OpenAPI 3.x.
  version: 1.0.0
  termsOfService: none
paths:
  /hypermedia/{title}:
    get:
      summary: Get hypermedia information about a specific title
      description: get information about a media, including metadata, reviews, images, editor's cut and trailers, etc.
        Demonstrates in-line composite schema definition of the response body.
      operationId: getHypermedia
      parameters:
        - name: title
          in: path
          required: true
          description: the unique title of the media.
          schema:
            type: string
      responses:
        '200':
          description: the media title has been found
          content:
            application/json:
              schema:
                # Strategy that references an intermediate composite schema
                #$ref: '#/components/schemas/Hypermedia'
                # Strategy that defines a composite schema in-line
                allOf:
                  - $ref: '#/components/schemas/MediaMetadata'
                  - $ref: '#/components/schemas/Images'
                  - $ref: '#/components/schemas/Videos'
                  - $ref: '#/components/schemas/Reviews'
                  - $ref: '#/components/schemas/Tags'
              example:
  /hypermedia:
    post:
      summary: Create hypermedia resource.
      description: The initial create can be added upon once the work is established.
        Demonstrates in-line composite schema definition of the request body.
      operationId: createHypermedia
      requestBody:
        description: this is a description
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MediaMetadata'
                - $ref: '#/components/schemas/Tags'
      responses:
        '200':
          description: this is a description
components:
  schemas:
    MediaMetadata:
      title: mediaMetadata
      type: object
      description: Facts about the media work in its entirety.
      properties:
        isan:
          description: The International Standard Audiovisual Number unique identifier.
          type: string
        title:
          description: The media title.
          type: string
          format: name
        published:
          description: The publication date of the work.
          type: string
          format: date
    Images:
      title: images
      type: object
      description: A collection of still images related to the work
      properties:
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
      additionalProperties: false
    Videos:
      title: video
      type: object
      description: A collection of videos related to the work.
      properties:
        videos:
          type: array
          items:
            $ref: '#/components/schemas/Video'
    Reviews:
      title: reviews
      type: object
      description: The reviews of the work.
      properties:
        reviews:
          type: array
          items:
            type: object
            properties:
              alias:
                type: string
              rating:
                type: integer
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
              comment:
                type: string
    Tags:
      title: tags
      type: object
      description: Category tags assigned to the work, for searching purposes.
      properties:
        tags:
          type: array
          items:
            type: string
#   Including Hypermedia intermediate schema to play with composite schema definitions.
    Hypermedia:
      title: hypermedia
      type: object
      allOf:
        - $ref: '#/components/schemas/MediaMetadata'
        - $ref: '#/components/schemas/Images'
        #- $ref: '#/components/schemas/Video'
        #- $ref: '#/components/schemas/Tags'
        #- $ref: '#/components/schemas/Reviews'
    Image:
      title: image
      type: object
      properties:
        size:
          type: integer
        dimensions:
          type: object
          properties:
            width:
              type: integer
            height:
              type: integer
        image:
          type: string
          format: binary
      additionalProperties: false
    Video:
      title: video
      type: object
      properties:
        type:
          type: string
          enum:
            - trailer
            - full-length
            - editors-cut
            - clip
        length:
          type: integer
        description:
          type: string
        yearPublished:
          type: string
          pattern: '[0-9]{4}'
        video:
          type: string
          format: binary
      additionalProperties: false